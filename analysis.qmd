---
title: "Diabetes Risk Prediction"
format: html
editor: visual
---

```{r}

# Load required packages
library(tidyverse)
library(broom)
library(readr)

# Create in-memory SQLite DB and copy CSV into a table
library(DBI)
library(RSQLite)
```

## Load Data

```{r}

# Create a temporary, in-memory SQLite database (no files saved to disk)
con <- dbConnect(RSQLite::SQLite(), ":memory:")

# Load the synthetic EHR dataset from CSV into R as a data frame
ehr <- read_csv("data/mock_ehr.csv")

# Copy the R data frame into the SQLite database as a table called "patients"
dbWriteTable(con, "patients", ehr, overwrite = TRUE)
```

## Modelling Cohort with SQL

```{sql connection=con}

DROP VIEW IF EXISTS cohort_tbl;
```

```{sql connection=con}

CREATE TEMP TABLE cohort_tbl AS
SELECT
    patient_id,
    age,
    sex,
    bmi,
    systolic_bp,
    cholesterol,
    CASE smoker WHEN 'Yes' THEN 1 ELSE 0 END             AS smoker_bin,
    CASE WHEN has_diabetes IN (1) THEN 1 ELSE 0 END AS label,
    CASE
        WHEN bmi < 18.5 THEN 'under'
        WHEN bmi < 25   THEN 'normal'
        WHEN bmi < 30   THEN 'over'
        ELSE                 'obese'
    END AS bmi_cat
FROM patients
WHERE bmi BETWEEN 12 AND 60
  AND systolic_bp BETWEEN 80 AND 250;
```

## Descriptive SQL Summary (per BMI category)

```{sql connection=con}

SELECT
    bmi_cat,
    COUNT(*)                                 AS n_total,
    SUM(label)                               AS diab_yes,       
    ROUND(100.0 * SUM(label) / COUNT(*), 1)  AS prevalence_pct,
    ROUND(AVG(age), 1)                       AS mean_age,
    ROUND(AVG(bmi), 1)                       AS mean_bmi
FROM cohort_tbl
GROUP BY bmi_cat
ORDER BY prevalence_pct DESC;

```

## Logistic Regression

```{r}

# Build model to predict diabetes
model <- glm(has_diabetes ~ age + sex + smoker + bmi + systolic_bp + cholesterol,
             data = ehr, family = binomial)

# Summarize results
summary(model)

# Tidy output
tidy(model, exponentiate = TRUE, conf.int = TRUE) %>%  
  mutate(term = str_replace(term, "sexMale",   "Male vs Female"),
         term = str_replace(term, "smokerYes", "Smoker vs Non-smoker"))


```

## Interpretation

```{r}

# Plot odds ratios
tidy(model, exponentiate = TRUE, conf.int = TRUE) %>%
  ggplot(aes(x = reorder(term, estimate), y = estimate)) +
  geom_point() +
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.2) +
  coord_flip() +
  labs(title = "Odds Ratios for Diabetes Risk", x = "", y = "Odds Ratio")

```
